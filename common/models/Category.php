<?php

namespace common\models;

use Yii;
use corpsepk\yml\behaviors\YmlCategoryBehavior;
use backend\modules\prom\behaviors\PromCategoryBehavior;
/**
 * This is the model class for table "abh_category".
 *
 * @property integer $id
 * @property string $name
 * @property string $slug_category
 * @property string $description_category
 * @property integer $parrent_category
 */
class Category extends \yii\db\ActiveRecord
{
    public $image;


    public function behaviors()
    {
        return [
            'ymlCategory' => [
                'class' => YmlCategoryBehavior::className(),
                'scope' => function ($model) {
                    /** @var \yii\db\ActiveQuery $model */
                    $model->select(['id', 'name', 'parrent_category']);
                    $model->andWhere(['not in','id', [65,66,67,68,72]]);
                },
                'dataClosure' => function ($model) {
                    /** @var self $model */
                    return [
                        'id' => $model->id,
                        'name' => $model->name,
                        'parentId' => $model->parrent_category
                    ];
                }
            ],
            'promCategory' => [
                'class' => PromCategoryBehavior::className(),
                'scope' => function ($model) {
                    /** @var \yii\db\ActiveQuery $model */
                    $model->select(['id', 'name', 'parrent_category']);
                    $model->andWhere(['not in','id', [65,68,72]]);
                },
                'dataClosure' => function ($model) {
                    /** @var self $model */
                    return [
                        'id' => $model->id,
                        'name' => $model->name,
                        'parentId' => $model->parrent_category
                    ];
                }
            ],
        ];
    }
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'abh_category';
    }
    
    public function beforeSave($insert)
    {
        if($insert){
            $descriptions = strip_tags($this->description_category);
            $descriptions = str_replace("&nbsp;",' ',$descriptions);
            $descriptions = substr($descriptions, 0, 300);
            $descriptions = substr($descriptions, 0, strrpos($descriptions, ' '));
            $this->quote =$descriptions;
        }
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }


    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['name'], 'required'],
            [['parrent_category','modulcategory'], 'integer'],
            [['name', 'slug_category', 'size','quote' ], 'string', 'max' => 255],
            [['templates'],'string','max'=>510],
            [['description_category'], 'string', 'max' => 5000],
        ];
    }

    public function getName()
    {
        return $this->attributes['name'];
    }
    /**
     * @inheritdoc
     */
    public function getId()
    {
        return $this->attributes['id'];
    }
    /**
     * @inheritdoc
     */
    public function getParentId()
    {
        return $this->attributes['parrent_category'];
    }
    public function getGods(){
        return $this->hasMany(Gods::className(),['id'=>'id_gods'])->viaTable('abh_cat_gods_post', ['id_cat' => 'id']);
    }

    public function getChild(){
        return $this->hasMany(Category::className(),['parrent_category'=>'id']);
    }
    public function getAddfeilds(){
        return $this->hasMany(Addlfeild::className(),['id_cat'=>'id']);
    }

    public function getParentcat(){
        return $this->hasOne(Category::className(),['id'=>'parrent_category']);
    }
    /**
     * @inheritdoc
     */
    public static function findYml($findParams = [])
    {
        $query = self::find();
        $query->orderBy('id');
        return $query;
    }
    public function  catFooterMenu($home,$json){
        $catJson=json_decode($json);
        $menuArr='';
        foreach ($catJson as $cat){
            if($cat->cat==1){
                $theCat=Category::findOne($cat->id);
                if($theCat->modulcategory==1){
                    $modulUrl='gods';
                    $menuArr .="<li><a href='".Yii::$app->urlManager->createUrl(['/'.$modulUrl.'/'.$modulUrl.'/category','slug'=>$theCat->slug_category])."'><span class='fa fa-angle-right'></span>".$theCat->name."</a></li>";
                }elseif ($theCat->modulcategory==2){
                    $modulUrl='post';
                    $menuArr .="<li><a href='".Yii::$app->urlManager->createUrl(['/'.$modulUrl.'/'.$modulUrl.'/category'])."'><span class='fa fa-angle-right'></span>".$theCat->name."</a></li>";
                }else{
                    $modulUrl='office';
                    $menuArr .="<li><a href='".Yii::$app->urlManager->createUrl(['/'.$modulUrl.'/'.$modulUrl.'/category','slug'=>$theCat->slug_category])."'><span class='fa fa-angle-right'></span>".$theCat->name."</a></li>";
                }

            }else{
                $thePage=Page::findOne($cat->id);
                $menuArr .= "<li><a href='" . Yii::$app->urlManager->createUrl(['/office/office/category', 'slug' => $thePage->slug_page]) . "'><span class='fa fa-angle-right'></span>" . $thePage->title . "</a></li>";
            }

        }
        return $menuArr;
    }

    public function catParent($catAll,$Jsoncat,$cat){
        $countLi=0;
        $dropArray='';
        foreach ($catAll as $allCat){
            if($allCat->modulcategory==1){
                $modulUrl='gods';
            }elseif ($allCat->modulcategory==2){
                $modulUrl='post';
            }else{
                $modulUrl='office';
            }
            if($allCat->parrent_category == $cat->id){
                $dropArray.='<li><a  data-test="'.$Jsoncat->id.'" href="'.Yii::$app->urlManager->createUrl(['/'.$modulUrl.'/'.$modulUrl.'/category','slug'=>$allCat->slug_category]).'">'.$allCat->name.'</a></li>';
                if($countLi!=0 && $countLi%8==0){
                    $dropArray.='</ul><ul class="col-lg-6 col-md-6 col-sm-24">';
                }
                $countLi=$countLi+1;
            }
        }
        return $dropArray;
    }

    public function catForMenu($home,$json){
        $menuArr='';

        $catJson=json_decode($json);

        if( $home == 'heder-menu-left'){
            $menuArr .='<li><a href="'.Yii::$app->homeUrl.'">Главная</a></li>';
        }
        foreach ($catJson as $Jsoncat){
            if($Jsoncat->cat==1){
                $cat= Category::findOne(['id'=>$Jsoncat->id]);
                    $theTest=Category::find()->where(['parrent_category'=>$cat->id])->all();
                        if($cat->modulcategory==1){
                            $modulUrl='gods';
                            $modulTwo='all';
                        }elseif ($cat->modulcategory==2){
                            $modulUrl='post';
                            $modulTwo='post';
                        }else{
                            $modulUrl='office';
                            $modulTwo='office';
                        }

                        if(!empty($cat->child)) {
                            $menuArr .= '<li class="dropdown"><a href="'.Yii::$app->urlManager->createUrl(['/'.$modulUrl.'/'.$modulUrl.'/category','slug'=>$cat->slug_category]).'" class="dropdown-toggleOne col-md-24 col-sm-16 col-xs-16 " >'.$cat->name.'</a><a href="#" class="nodisplay dropdown-toggle col-sm-8 col-xs-8" data-toggle="dropdown"><span class="fa fa-caret-down fa-4"></span></span></a><ul class="dropdown-menu"><ul class="col-ld-16 col-md-16 col-sm-24"><ul class="col-lg-6 col-md-6 col-sm-24">'.$this->catParent($theTest,$Jsoncat,$cat).'</ul></ul></ul></li>';
                        }else{

                            $menuArr .= '<li class="listitem"><a class="dropdown-toggleOne" data-test="'.$Jsoncat->id.'" href="'.Yii::$app->urlManager->createUrl(['/'.$modulUrl.'/'.$modulUrl.'/category','slug'=>$cat->slug_category]).'">'.$cat->name.'</a></li>';
                        }

            }else{
                $page=Page::findOne(['id'=>$Jsoncat->id]);
                $menuArr .= '<li><a href="'.Yii::$app->urlManager->createUrl(["/office/office/index",'slug'=>$page->slug_page]).'">'.$page->title.'</a></li>';
            }
         }
        return  $menuArr;
    }



public function getParrentCat($id){
        $category = Category::findOne(['id'=>$id]);
        if(isset($category))
            return $category->name;
        else
            return 'не задано';
    }
    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'name' => Yii::t('backend','NAME_CATEGORY'),
            'slug_category' => Yii::t('backend','SLUG_CATEGORY'),
            'description_category' => Yii::t('backend','DESCRIPTION_CATEGORY'),
            'parrent_category' => Yii::t('backend','PARRENT_CATEGORY'),
            'modulcategory'=>Yii::t('backend','MODULCATEGORY'),
            'quote'=>Yii::t('backend','QUOTE'),
            'size'=>Yii::t('backend','SIZECATEGORY'),
            'templates'=>Yii::t('backend','TEMPLATES')
        ];
    }
}
